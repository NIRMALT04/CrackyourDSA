class Solution:
    def findDuplicate(self, nums):
        # Phase 1: Finding the intersection point of the two runners.
        slow = nums[0]
        fast = nums[0]
        
        while True:
            slow = nums[slow]
            fast = nums[nums[fast]]
            if slow == fast:
                break
        
        # Phase 2: Finding the entrance to the cycle.
        finder = nums[0]
        while finder != slow:
            finder = nums[finder]
            slow = nums[slow]
        
        return slow

# Example usage
sol = Solution()
print(sol.findDuplicate([1, 3, 4, 2, 2]))  # Output: 2
print(sol.findDuplicate([3, 1, 3, 4, 2]))  # Output: 3
print(sol.findDuplicate([3, 3, 3, 3, 3]))  # Output: 3
